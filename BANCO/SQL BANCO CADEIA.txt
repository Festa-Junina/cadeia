CREATE TABLE funcao (
    idFuncao INT PRIMARY KEY,
    nome VARCHAR(100)
);

CREATE TABLE usuario (
    idUsuario INT PRIMARY KEY AUTO_INCREMENT,
    idFuncao INT,
    login VARCHAR(100) UNIQUE,
    senha VARCHAR(200),
    FOREIGN key (idFuncao) REFERENCES
    funcao(idFuncao)
);

CREATE TABLE perguntaCategoria (
    idCategoria INT PRIMARY KEY,
    nome VARCHAR(100)
);

CREATE TABLE pergunta (
    idPergunta INT PRIMARY KEY AUTO_INCREMENT,
    idCategoria INT,
    enunciado VARCHAR(200),
    resposta VARCHAR(100),
    alternativa1 VARCHAR(100),
    alternativa2 VARCHAR(100),
    alternativa3 VARCHAR(100),
    FOREIGN key (idCategoria) REFERENCES
    perguntaCategoria(idCategoria)
);

CREATE TABLE tipoMeliante (
    idTipoMeliante INT PRIMARY KEY,
    nome VARCHAR(100)
);

CREATE TABLE turmaMeliante (
    idTurmaMeliante INT PRIMARY KEY,
    nome VARCHAR(100)
);

CREATE TABLE statusOrdem (
    idStatusOrdem INT PRIMARY KEY,
    nome VARCHAR(100)
);

CREATE TABLE ticket (
    idTicket INT PRIMARY KEY AUTO_INCREMENT,
    ticket INT UNIQUE,
    valido BOOLEAN
);

CREATE TABLE ordemPrisao (
    idOrdem INT PRIMARY KEY AUTO_INCREMENT,
    idTicket INT,
    idTipoMeliante INT,
    idTurmaMeliante INT,
    idStatusOrdem INT,
    nomeMeliante VARCHAR(100),
    descricaoMeliante VARCHAR(200),
    localVisto VARCHAR(100),
    nomeDenunciante VARCHAR(100),
    telefoneDenunciante VARCHAR(50),
    horaOrdem TIMESTAMP,
    FOREIGN key (idTicket) REFERENCES
    ticket(idTicket),
    FOREIGN key (idTipoMeliante) REFERENCES
    tipoMeliante(idTipoMeliante),
    FOREIGN key (idTurmaMeliante) REFERENCES
    turmaMeliante(idTurmaMeliante),
    FOREIGN key (idStatusOrdem) REFERENCES
    statusOrdem(idStatusOrdem)
); 

CREATE TABLE statusPrisao (
    idStatusPrisao INT PRIMARY KEY,
    nome VARCHAR(100)
);

CREATE TABLE prisao (
    idPrisao INT PRIMARY KEY AUTO_INCREMENT,
    idOrdemPrisao INT,
    idStatusPrisao INT,
    horaPrisao TIMESTAMP,
    quantidadePerguntasRespondidas INT,
    FOREIGN key (idOrdemPrisao) REFERENCES
    ordemPrisao(idOrdem),
    FOREIGN key (idStatusPrisao) REFERENCES
    statusPrisao(idStatusPrisao)
);